// Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.
// N = 5 -> "5, 4, 3, 2, 1"
// N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

int InputNum(string message)
{
    System.Console.Write(message);
    return int.Parse(Console.ReadLine()!);
}

void PrintNumbers(int num)
{
    if (num == 0) return;
    Console.Write(num + " ");
    PrintNumbers(num - 1);

}

int number = InputNum("Введите число N: ");
PrintNumbers(number);


// Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
// M = 1; N = 15 -> 120
// M = 4; N = 8. -> 30

int InputNum(string message)
{
    System.Console.Write(message);
    return int.Parse(Console.ReadLine()!);
}

int SumDigits(int start, int end)
{
  if (start == end) return start;
  return SumDigits(start + 1, end) + start;
}

int start = InputNum("Введите число M: ");
int end = InputNum("Введите число N: ");

int summ = SumDigits(start, end);
Console.WriteLine(SumDigits(start, end));


// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

int InputNum(string message)
{
    System.Console.Write(message);
    return int.Parse(Console.ReadLine()!);
}

int AkkermanFunction(int m, int n)
{
    if (m == 0)
    {
        return n + 1;
    }
    else if (n == 0 && m > 0)
    {
        return AkkermanFunction(m - 1, 1);
    }
    else
    {
        return (AkkermanFunction(m - 1, AkkermanFunction(m, n - 1)));
    }
}

int m = InputNum("Введите число M: ");
int n = InputNum("Введите число N: ");

if (m < 0 || n < 0)
{
    Console.WriteLine("Значения M и N должны быть больше нуля");
    return;
}
int funcAkker = AkkermanFunction(m, n);
Console.WriteLine ($"A({m},{n}) = {AkkermanFunction(m, n)}");
